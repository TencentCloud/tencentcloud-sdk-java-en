/*
 * Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.tencentcloudapi.gme.v20180711.models;

import com.tencentcloudapi.common.AbstractModel;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;

public class CreateAppResponse extends AbstractModel{

    /**
    * Application ID, which is automatically generated by the backend
    */
    @SerializedName("BizId")
    @Expose
    private Long BizId;

    /**
    * Application name, which is passed through from the `AppName` input parameter
    */
    @SerializedName("AppName")
    @Expose
    private String AppName;

    /**
    * Project ID, which is passed through from the entered `ProjectId`
    */
    @SerializedName("ProjectId")
    @Expose
    private Long ProjectId;

    /**
    * Application key, which is used when the GME SDK is initialized
    */
    @SerializedName("SecretKey")
    @Expose
    private String SecretKey;

    /**
    * Service creation timestamp
    */
    @SerializedName("CreateTime")
    @Expose
    private Long CreateTime;

    /**
    * Configuration information of voice chat
    */
    @SerializedName("RealtimeSpeechConf")
    @Expose
    private RealtimeSpeechConf RealtimeSpeechConf;

    /**
    * Configuration information of voice messaging and speech-to-text
    */
    @SerializedName("VoiceMessageConf")
    @Expose
    private VoiceMessageConf VoiceMessageConf;

    /**
    * Configuration information of phrase analysis
    */
    @SerializedName("VoiceFilterConf")
    @Expose
    private VoiceFilterConf VoiceFilterConf;

    /**
     * Get Application ID, which is automatically generated by the backend 
     * @return BizId Application ID, which is automatically generated by the backend
     */
    public Long getBizId() {
        return this.BizId;
    }

    /**
     * Set Application ID, which is automatically generated by the backend
     * @param BizId Application ID, which is automatically generated by the backend
     */
    public void setBizId(Long BizId) {
        this.BizId = BizId;
    }

    /**
     * Get Application name, which is passed through from the `AppName` input parameter 
     * @return AppName Application name, which is passed through from the `AppName` input parameter
     */
    public String getAppName() {
        return this.AppName;
    }

    /**
     * Set Application name, which is passed through from the `AppName` input parameter
     * @param AppName Application name, which is passed through from the `AppName` input parameter
     */
    public void setAppName(String AppName) {
        this.AppName = AppName;
    }

    /**
     * Get Project ID, which is passed through from the entered `ProjectId` 
     * @return ProjectId Project ID, which is passed through from the entered `ProjectId`
     */
    public Long getProjectId() {
        return this.ProjectId;
    }

    /**
     * Set Project ID, which is passed through from the entered `ProjectId`
     * @param ProjectId Project ID, which is passed through from the entered `ProjectId`
     */
    public void setProjectId(Long ProjectId) {
        this.ProjectId = ProjectId;
    }

    /**
     * Get Application key, which is used when the GME SDK is initialized 
     * @return SecretKey Application key, which is used when the GME SDK is initialized
     */
    public String getSecretKey() {
        return this.SecretKey;
    }

    /**
     * Set Application key, which is used when the GME SDK is initialized
     * @param SecretKey Application key, which is used when the GME SDK is initialized
     */
    public void setSecretKey(String SecretKey) {
        this.SecretKey = SecretKey;
    }

    /**
     * Get Service creation timestamp 
     * @return CreateTime Service creation timestamp
     */
    public Long getCreateTime() {
        return this.CreateTime;
    }

    /**
     * Set Service creation timestamp
     * @param CreateTime Service creation timestamp
     */
    public void setCreateTime(Long CreateTime) {
        this.CreateTime = CreateTime;
    }

    /**
     * Get Configuration information of voice chat 
     * @return RealtimeSpeechConf Configuration information of voice chat
     */
    public RealtimeSpeechConf getRealtimeSpeechConf() {
        return this.RealtimeSpeechConf;
    }

    /**
     * Set Configuration information of voice chat
     * @param RealtimeSpeechConf Configuration information of voice chat
     */
    public void setRealtimeSpeechConf(RealtimeSpeechConf RealtimeSpeechConf) {
        this.RealtimeSpeechConf = RealtimeSpeechConf;
    }

    /**
     * Get Configuration information of voice messaging and speech-to-text 
     * @return VoiceMessageConf Configuration information of voice messaging and speech-to-text
     */
    public VoiceMessageConf getVoiceMessageConf() {
        return this.VoiceMessageConf;
    }

    /**
     * Set Configuration information of voice messaging and speech-to-text
     * @param VoiceMessageConf Configuration information of voice messaging and speech-to-text
     */
    public void setVoiceMessageConf(VoiceMessageConf VoiceMessageConf) {
        this.VoiceMessageConf = VoiceMessageConf;
    }

    /**
     * Get Configuration information of phrase analysis 
     * @return VoiceFilterConf Configuration information of phrase analysis
     */
    public VoiceFilterConf getVoiceFilterConf() {
        return this.VoiceFilterConf;
    }

    /**
     * Set Configuration information of phrase analysis
     * @param VoiceFilterConf Configuration information of phrase analysis
     */
    public void setVoiceFilterConf(VoiceFilterConf VoiceFilterConf) {
        this.VoiceFilterConf = VoiceFilterConf;
    }

    /**
     * Internal implementation, normal users should not use it.
     */
    public void toMap(HashMap<String, String> map, String prefix) {
        this.setParamSimple(map, prefix + "BizId", this.BizId);
        this.setParamSimple(map, prefix + "AppName", this.AppName);
        this.setParamSimple(map, prefix + "ProjectId", this.ProjectId);
        this.setParamSimple(map, prefix + "SecretKey", this.SecretKey);
        this.setParamSimple(map, prefix + "CreateTime", this.CreateTime);
        this.setParamObj(map, prefix + "RealtimeSpeechConf.", this.RealtimeSpeechConf);
        this.setParamObj(map, prefix + "VoiceMessageConf.", this.VoiceMessageConf);
        this.setParamObj(map, prefix + "VoiceFilterConf.", this.VoiceFilterConf);

    }
}

